{"version":3,"sources":["Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["Tabs","useState","toggleState","setToggleState","toggleTab","index","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKA8CeA,EA1CH,WAAM,IAAD,EAEsBC,mBAAS,GAF/B,mBAETC,EAFS,KAEIC,EAFJ,KAGVC,EAAW,SAACC,GACjBF,EAAeE,IAEf,OACC,sBAAKC,UAAU,YAAf,UACD,sBAAKA,UAAU,YAAf,UACC,qBAAKA,UAA2B,IAAhBJ,EAAoB,mBAAqB,OAAQK,QAAS,kBAAIH,EAAU,IAAxF,mBACA,qBAAKE,UAA2B,IAAhBJ,EAAoB,mBAAqB,OAAQK,QAAS,kBAAIH,EAAU,IAAxF,mBACA,qBAAKE,UAA2B,IAAhBJ,EAAoB,mBAAqB,OAAQK,QAAS,kBAAIH,EAAU,IAAxF,sBAGD,sBAAKE,UAAU,eAAf,UACC,sBAAKA,UAA2B,IAAhBJ,EAAoB,yBAA2B,UAA/D,UACC,2CACA,uBACA,iRAID,sBAAKI,UAA2B,IAAhBJ,EAAoB,yBAA2B,UAA/D,UACC,2CACA,uBACA,iRAID,sBAAKI,UAA2B,IAAhBJ,EAAoB,yBAA2B,UAA/D,UACC,2CACA,uBACA,wRCxBWM,EARJ,WACT,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dcee8a94.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport './App.css';\r\n\r\n\r\nconst Tabs =()=> {\r\n\r\n\tconst [toggleState, setToggleState] = useState(1);\r\n\tconst toggleTab =(index)=>{\r\n\t\tsetToggleState(index)\r\n\t}\r\n  return (\r\n   <div className='container'>\r\n\t\t<div className='bloc-tabs'>\r\n\t\t\t<div className={toggleState === 1 ? 'tabs active-tabs' : 'tabs'} onClick={()=>toggleTab(1)}>Tab 1</div>\r\n\t\t\t<div className={toggleState === 2 ? 'tabs active-tabs' : 'tabs'} onClick={()=>toggleTab(2)}>Tab 2</div>\r\n\t\t\t<div className={toggleState === 3 ? 'tabs active-tabs' : 'tabs'} onClick={()=>toggleTab(3)}>Tab 3</div>\r\n\t\t</div> \r\n\r\n\t\t<div className='content-tabs'>\r\n\t\t\t<div className={toggleState === 1 ? 'content active-content' : 'content'}>\r\n\t\t\t\t<h2>content 1</h2>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<p>Lorem Lopsum color Lorem Lopsum color Lorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color\r\n\t\t\t\tLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={toggleState === 2 ? 'content active-content' : 'content'}>\r\n\t\t\t\t<h2>content 2</h2>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<p>Lorem Lopsum color Lorem Lopsum color Lorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color\r\n\t\t\t\tLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={toggleState === 3 ? 'content active-content' : 'content'}>\r\n\t\t\t\t<h2>content 3</h2>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<p>Lorem Lopsum color Lorem Lopsum color Lorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color\r\n\t\t\t\tLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum colorLorem Lopsum color</p>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Tabs;\r\n","import React from 'react';\nimport Tabs from './Tabs';\nimport './App.css';\n\nconst App =()=> {\n  return (\n    <div className=\"App\">\n      <Tabs/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}